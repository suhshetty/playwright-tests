name: Visual Regression - VisualTesting Folder

on:
  # nightly at 12:00 AM IST (IST = UTC+5:30 => 12:00 IST = 18:30 UTC previous day)
  schedule:
    - cron: '30 18 * * *'
  workflow_dispatch:

jobs:
  list-visual-files:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.create-matrix.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create matrix from tests/VisualTesting (git-tracked files only)
        id: create-matrix
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            // List only files tracked by git in tests/VisualTesting with typical extensions.
            // Adjust extensions if you have other ones.
            const cmd = `bash -lc "git ls-files 'tests/VisualTesting/*.{mjs,js,ts}'"`;
            const out = execSync(cmd, { encoding: 'utf8' })
              .split(/\r?\n/)
              .map(s => s.trim())
              .filter(Boolean);

            if (out.length === 0) {
              core.info('No files found in tests/VisualTesting');
            } else {
              core.info(`Found ${out.length} files in tests/VisualTesting`);
              out.forEach(f => core.info(f));
            }

            return JSON.stringify(out);

  run-visual-tests:
    needs: list-visual-files
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(needs.list-visual-files.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Show which file this job will run
        run: echo "Matrix file: ${{ matrix.file }}"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Ensure diffs folder exists
        run: mkdir -p screenshots/diffs

      - name: Run Playwright for matrix file
        run: |
          echo "Running visual tests for: ${{ matrix.file }}"
          # Run the single spec file explicitly
          npx playwright test "${{ matrix.file }}" --reporter=list

      - name: Upload Visual Report (per-file)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-report-${{ matrix.file }}
          path: playwright-report/

      - name: Upload Screenshot Diffs (per-file)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-diffs-${{ matrix.file }}
          path: screenshots/diffs/

  aggregate:
    needs: run-visual-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Summary note
        run: echo "All VisualTesting matrix jobs completed. Check per-file artifacts for reports and diffs."
